Comandos de GIT

git init : inicia el repositorio.
git add #archivo|: añade un archivo al staging (memoria temporal para los cambios).
git add . : añade todos los archivos modificados
git commit : añade los cambios de staging al repositorio. Pide un comentario, para guardar el comentario presionar esc y despues shift+z+z .
git commit -m "#comentario" : Crea un commit con comentario
git commit -am "#comentario" : forma compacta de add y commit

git status : muestra el estado del proyecto

git rm --catched :quita un archivo del staging y del proximo commit pero no los del disco duro
git rm --force : elimina los archivos de git y del disco duro.

git log : muestra el historial
git log --oneline : muestra el historial más compacto
git log #archivo : muestra el historial de cambios del #archivo
git log --stat : Muestra los cambios en cada commit (presionar q para salir).
git log --all --graph --decorate --oneline : muestra el historial como si fuera un diagrama de árbol.

git show #archivo: muestra los cambios de un archivo
git diff #hash1 #hash2: muestra las diferencias entre dos commits

git reset #hash --hard : revierte cambios en todo, borra el staging
git reset #hash --soft : revierte cambios en todo, no borra el staging
git reset HEAD : Elimina los archivos del staging

git checkout #hash: Selecciona el archivo o la rama

git config : configurar git
git config --list
git config --list --show-origin : muestra las configuraciones guardadas
git config --globlal user.name #nombre; Cambia el nombre del usuario
git config --globlal user.email #email; Cambia el email del usuario

git branch :muestra las ramas que hay 
git branch #nombre : crea una nueva rama
git branch -D #rama : borra una rama
git show-branch : muestra las ramas y su historia
git show-branch --all: muestra las ramas y su historia más otros elementos

git remote add origin #url: crear repositorio remoto
git remote -v : ver repositorio remoto

git push #origin #rama : enviar rama al repositorio remote
git pull #origin #rama : traer archivos del repositorio
git pull #origin #rama --allow-unrelated-histories : traer archivos de un repositorio remoto aunque tengan historias distintasgit config 

git tag : ver los tag hechos
git tag -a #version  -m "#comentario" #hash : añadir un nuevo tag al hash indicado
git show-ref --tags : Muestra los tags con sus respectivas referencias
git push origin --tags : enviar los tags al repositorio remoto
git tag -d #tag : Borrar tag local
git push origin :refs/tags/#tag : Borrar tags remoto

gitk : Abre la historia en otra interfaz

git clone #url : Copiar un repositorio remoto

git stash : Regresa a antes de hacer cambios y los cambios los guarda en otro directorio
git stash list : Muestra los cambios que se han guardado con el comando
git stash pop : Regresa los cambios que se habían guardado
git stash branch #nombre : Guarda los cambios en el statch en una nueva rama
git stash drop : Borra los cambios guardados en stash

git clean --dry-run : Muestra los archivos que se pueden borrar
git clean -f: Borra los archivos no trackeados, no borra las carpetas

git cherry-pick #hash1 #hash2 #hashn : trae uno o varios commits a la rama actual

° amend: modifica el commit de HEAD
-antes de hacerlo se debe añadir el cambio
- git commit --amend  : Se guardan los cambios en el commit anterior no en uno nuevo

°Deshacer cambios drasticos
- usar $git reflog para ver todos los registros incluso los borrados.
- buscar el hash del commit al que se quiere volver.
-usar $git reset --hard #hash para regresar.

git grep #palabra : te dice en que archivos se uso #palabra
git grep -n #palabra : te dice en que archivos y lineas se uso #palabra.
git grep -c #palabra :te dice cuantas veces usas #palabra en los archivos.

git log -S "#palabra" : muestra todos los commits en los que se uso #palabra.

git shortlog : muestra los commits de todos colaboradores
git shorlog -sn : muestra solo el numero de commits de los colaboradores.
git shortlog -sn --all: muestra solo el numero de commits de los colaboradores incluso los borrados.
git shortlog -sn --all --no-merges : muestra solo el numero de commits de los colaboradores pero no los que fueron creados con merge.

°Alias en GIT
git config --global alias.#nombre "#comando sin la palabra git"

git blame #archivo :muestra el archivo y quien modifico las lineas.
git blame -c #archivo : muestra el archivo y quien modifico las lineas con mejor visualizacion.
git blame -c #archivo -L#lineaI,#lineaF : muestra quien modifico las lineas en el rango indicado.

git branch -r : ver las ramas remotas